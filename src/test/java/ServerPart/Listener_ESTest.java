/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 01 14:15:52 GMT 2018
 */

package ServerPart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ServerPart.Listener;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockServerSocket;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Listener_ESTest extends Listener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockServerSocket mockServerSocket0 = new MockServerSocket(0, (-1744));
      SystemInUtil.addInputLine("down");
      Listener listener0 = new Listener(mockServerSocket0);
      listener0.run();
      assertFalse(mockServerSocket0.isClosed());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockServerSocket mockServerSocket0 = new MockServerSocket(0, (-1744));
      Listener listener0 = new Listener(mockServerSocket0);
      // Undeclared exception!
      try { 
        listener0.run();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
